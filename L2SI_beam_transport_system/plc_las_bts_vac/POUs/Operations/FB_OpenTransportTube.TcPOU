<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_OpenTransportTube" Id="{9853b0f7-0da2-457b-8c34-deca199bc8ef}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_OpenTransportTube EXTENDS FB_TTOperation
VAR
	fbPumpSwitchbox : FB_PumpSwitchbox;
	fbPumpTransportTube : FB_PumpTransportTube;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
SUPER^(iq_sMessageBuffer := iq_sMessageBuffer);

CASE eStep OF
E_OpStep.IDLE: // Do nothing

E_OpStep.START: // Verify system status	
	M_SetMessage('Verifying System Status');
	
	IF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS <= 1E-5 AND fbTT.q_stConfig.stDevices.refColdCathode.IG.rPRESS <= 1E-5 THEN 
		// System status check passed
		M_SetMessage('Opening gate valve');
		eStep := E_OpStep.OTT_OPEN_VALVE;
	// If either the switchbox or transport tube are not at base pressure, pump down the higher one
	ELSIF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS > fbTT.q_stConfig.stDevices.refColdCathode.IG.rPRESS THEN
		// Pump down switchbox
		M_SetMessage('Pumping switchbox');
		eStep := E_OpStep.OTT_RUN_PSB;
	ELSE // Pump down transport tube
		M_SetMessage('Pumping transport tube');
		eStep := E_OpStep.OTT_RUN_PTT;
	END_IF
	
E_OpStep.OTT_RUN_PSB: // Pump down switchbox
	M_DeferCancel(TRUE); // Make sure pump switchbox cancels before this operation does
	fbPumpSwitchbox(i_bExecute := TRUE,
		i_bCancel := i_bCancel,
		iq_sMessageBuffer := iq_sMessageBuffer);
		
	IF fbPumpSwitchbox.q_bError THEN
		M_DeferCancel(FALSE);
		M_FatalError('Error while pumping switchbox');
	ELSIF NOT fbPumpSwitchbox.q_bBusy THEN
		M_DeferCancel(FALSE);
		M_SetMessage('Retrying open transport tube');
		eStep := E_OpStep.START;
	END_IF
	
E_OpStep.OTT_RUN_PTT: // Pump transport tube
	M_DeferCancel(TRUE); // Make sure pump transport tube cancels before this operation does
	fbPumpTransportTube(i_bExecute := TRUE,
		i_bCancel := i_bCancel,
		iq_sMessageBuffer := iq_sMessageBuffer,
		i_eTransportTube := eTT);
		
	IF fbPumpTransportTube.q_bError THEN
		M_DeferCancel(FALSE);
		M_FatalError('Error while pumping transport tube');
	ELSIF NOT fbPumpTransportTube.q_bBusy THEN
		M_DeferCancel(FALSE);
		M_SetMessage('Retrying open transport tube');
		eStep := E_OpStep.START;
	END_IF
	
E_OpStep.OTT_OPEN_VALVE:
	M_RunTimeoutTimer(VALVE_TIMEOUT);
	
	// Open the gate valve
	fbTT.q_stConfig.stDevices.refGateValve.M_Set_OPN_SW(TRUE);
	
	// Once the gate valve is open, finish the operation
	IF fbTT.q_stConfig.stDevices.refGateValve.M_IsOpen() THEN
		M_ResetTimeoutTimer();
		M_Finish();
	END_IF
	
ELSE
	M_FatalError('Operation is in invalid state');
END_CASE
*)]]></ST>
    </Implementation>
    <LineIds Name="FB_OpenTransportTube">
      <LineId Id="777" Count="0" />
      <LineId Id="688" Count="2" />
      <LineId Id="768" Count="1" />
      <LineId Id="691" Count="0" />
      <LineId Id="695" Count="25" />
      <LineId Id="756" Count="0" />
      <LineId Id="721" Count="0" />
      <LineId Id="723" Count="32" />
      <LineId Id="20" Count="0" />
      <LineId Id="776" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>