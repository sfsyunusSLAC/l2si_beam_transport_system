<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_LaserOn" Id="{5437e5d8-4745-4193-bf7f-65f6c9441049}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_LaserOn EXTENDS FB_TTOperation
VAR	
	fbPumpSwitchbox : FB_PumpSwitchbox;
	fbPumpTransportTube : FB_PumpTransportTube;
END_VAR
VAR_STAT CONSTANT
	(* Expected system states before operation starts*)		
	stExpPumpStatus : ST_SBPumpStatuses := (
		bRoughingPumpOn:= TRUE, 
		bTurboPumpOn:= FALSE, 
		bIonPumpOn:= TRUE);
	
	stExpValveStatus : ST_SBValveStatuses := (
		bGateValveOpen:= FALSE, 
		bVentValveOpen:= FALSE, 
		bORingPumpValveOpen:= TRUE, 
		bForelineValveOpen:= TRUE, 
		bSlowPumpValveOpen:= FALSE,
		bSBVentOpen:= FALSE,  
		bSBSlowVentOpen:= FALSE);
	
	stExpGaugeReadings : ST_SBGaugeReadings := (
		eDPPiraniState:= E_PressureState.ValidLo,
		fDPColdCathodeVal:= 1E-5,
		ePumpStationPirani1State:= E_PressureState.ValidLo,
		fPumpStationPirani2Val:= 1E-2,
		fPumpStationColdCathodeVal:= 1E-5
	);
	stGaugeReadingsOp : ST_SBGaugeReadingsOp := (
		eDPPiraniOp:= E_GaugeCompOp.STATE, 
		eDPColdCathodeOp:= E_GaugeCompOp._LTE, 
		ePumpStationPirani1Op:= E_GaugeCompOp.STATE, 
		ePumpStationPirani2Op:= E_GaugeCompOp._LTE, 
		ePumpStationColdCathodeOp:= E_GaugeCompOp._LTE);
		
	stExpTTStatus : ST_TransportTubeStatuses := (
		bIonPumpOn:= TRUE,
		bGateValveOpen:= TRUE,
		ePiraniState:= E_PressureState.ValidLo,
		fColdCathodeVal:= 1E-5);
	stTTOp : ST_TransportTubeOps := (
		ePiraniOp := E_GaugeCompOp.STATE,
		eColdCathodeOp := E_GaugeCompOp._LTE
	);
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^(iq_sMessageBuffer := iq_sMessageBuffer);

CASE eStep OF
E_OpStep.IDLE: // Do nothing

E_OpStep.START: // Verify system status	
	M_SetMessage('Verifying system status');

	IF F_Atm(GVL_BTS_VAC.fb_DP_GPI.PG.rPRESS) OR GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS >= 1E-2 THEN
		// Pressure in switchbox too high. Pump down switchbox.
		M_SetMessage('Pumping switchbox');
		eStep := E_OpStep.LTT_RUN_PSB;
		
	ELSIF ABS(GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS - fbTT.q_stConfig.stDevices.refColdCathode.IG.rPRESS) >= 5E-4 THEN
		// Pressure difference between switchbox and transport tube too high
		IF fbTT.q_stConfig.stDevices.refColdCathode.IG.rPRESS > GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS THEN
			M_SetMessage('Pumping transport tube');
			eStep := E_OpStep.LTT_RUN_PTT;
		ELSE			
			M_SetMessage('Pumping switchbox');
			eStep := E_OpStep.LTT_RUN_PSB;
		END_IF 
		
	ELSIF F_VerifySBPumpStatuses(stExpStatus := stExpPumpStatus, bEnforce := FALSE)
	AND F_VerifySBValveStatuses(stExpStatus := stExpValveStatus, bEnforce := FALSE)
	AND F_VerifySBGaugeReadings(stExpReadings := stExpGaugeReadings, stReadingsOp := stGaugeReadingsOp)
	AND F_VerifyTransportTubeStatuses(stExpStatus := stExpTTStatus,
		eTransportTube := eTT,
		stStatusOp := stTTOp, 
		bEnforce := FALSE) 
	THEN 
		// System status check passed
		fbTT.M_SetLaserOk(TRUE);		
	ELSE 
		// System status check failed
		M_FatalError('Failed system status check');
	END_IF
	
E_OpStep.LTT_RUN_PSB: // Pump down switchbox
	M_DeferCancel(TRUE); // Make sure pump switchbox cancels before this operation does
	fbPumpSwitchbox(i_bExecute := TRUE,
		i_bCancel := i_bCancel,
		iq_sMessageBuffer := iq_sMessageBuffer);
		
	IF fbPumpSwitchbox.q_bError THEN
		M_Defercancel(FALSE);
		M_FatalError('Error while pumping switchbox');
	ELSIF NOT fbPumpSwitchbox.q_bBusy THEN
		M_Defercancel(FALSE);
		M_SetMessage('Retrying laser on operation');
		eStep := E_OpStep.START;
	END_IF
	
E_OpStep.LTT_RUN_PTT: // Pump transport tube
	M_DeferCancel(TRUE); // Make sure pump transport tube cancels before this operation does
	fbPumpTransportTube(i_bExecute := TRUE,
		i_bCancel := i_bCancel,
		iq_sMessageBuffer := iq_sMessageBuffer,
		i_eTransportTube := eTT);
		
	IF fbPumpTransportTube.q_bError THEN
		M_Defercancel(FALSE);
		M_FatalError('Error while pumping transport tube');
	ELSIF NOT fbPumpTransportTube.q_bBusy THEN
		M_Defercancel(FALSE);
		M_SetMessage('Retrying laser on operation');
		eStep := E_OpStep.START;
	END_IF
	
ELSE
	M_FatalError('Operation is in invalid state');
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_LaserOn">
      <LineId Id="315" Count="2" />
      <LineId Id="768" Count="1" />
      <LineId Id="318" Count="0" />
      <LineId Id="436" Count="0" />
      <LineId Id="671" Count="0" />
      <LineId Id="651" Count="0" />
      <LineId Id="676" Count="0" />
      <LineId Id="652" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="714" Count="0" />
      <LineId Id="674" Count="0" />
      <LineId Id="677" Count="0" />
      <LineId Id="707" Count="0" />
      <LineId Id="683" Count="0" />
      <LineId Id="678" Count="0" />
      <LineId Id="681" Count="0" />
      <LineId Id="684" Count="0" />
      <LineId Id="687" Count="0" />
      <LineId Id="679" Count="0" />
      <LineId Id="708" Count="0" />
      <LineId Id="818" Count="5" />
      <LineId Id="327" Count="0" />
      <LineId Id="824" Count="0" />
      <LineId Id="816" Count="0" />
      <LineId Id="764" Count="0" />
      <LineId Id="711" Count="0" />
      <LineId Id="817" Count="0" />
      <LineId Id="712" Count="0" />
      <LineId Id="330" Count="0" />
      <LineId Id="654" Count="1" />
      <LineId Id="668" Count="0" />
      <LineId Id="659" Count="4" />
      <LineId Id="669" Count="0" />
      <LineId Id="664" Count="1" />
      <LineId Id="670" Count="0" />
      <LineId Id="666" Count="1" />
      <LineId Id="656" Count="0" />
      <LineId Id="689" Count="0" />
      <LineId Id="691" Count="4" />
      <LineId Id="704" Count="0" />
      <LineId Id="696" Count="7" />
      <LineId Id="690" Count="0" />
      <LineId Id="489" Count="2" />
      <LineId Id="20" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>