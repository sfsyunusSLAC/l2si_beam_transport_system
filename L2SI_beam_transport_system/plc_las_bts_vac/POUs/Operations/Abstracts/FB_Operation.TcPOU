<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_Operation" Id="{6fc6f593-2545-4a95-82e1-c37424c5cf8b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Operation
VAR_INPUT
	i_bExecute : BOOL; // Flag that indicates the operation should be ran
	i_bCancel : BOOL; // Cancel operation input signal
END_VAR
VAR_IN_OUT
	iq_sMessageBuffer : STRING(EPICS_STRING_SIZE); // Human readable description of the current step
END_VAR
VAR_OUTPUT
	q_bError : BOOL; // Whether a fatal error was encountered
	q_bBusy : BOOL; // Whether the current operation is executing
END_VAR
VAR
	bCancel : BOOL; // Saved cancel operation signal
	bDeferCancel : BOOL; // Setting to True prevents operation from being immediatly cancelled with i_bCancel. Resets to FALSE after operation finishes
	eStep : E_OpStep := E_OpStep.IDLE; // The current operation step
	fbTimeoutTimer : TON; // TImer used for tracking operation timeouts
END_VAR
VAR_STAT CONSTANT
	STATUS_CHECK_TIMEOUT : TIME := T#30S; // How long the system tries setting the desired state before failing
	VALVE_TIMEOUT : TIME := T#10S; // How long system tries to open or close valve before failing
	ROUGH_CHAMBER_TIMEOUT : TIME := T#5M; // How long to try rough pumping before failing
	TURBO_CHAMBER_TIMEOUT : TIME := T#10M; // How long to try turbo pumping before failing
	PUMP_TIMEOUT : TIME := T#20S; // How long to try to turn on or off pump before failing
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF eStep = E_OpStep.IDLE AND i_bExecute = TRUE THEN
	// Start operation
	eStep := E_OpStep.START;
	q_bBusy := TRUE;
	M_ResetError();
END_IF

(* Save the input i_bCancel signal since cancelling can take multiple cycles *)
IF i_bCancel THEN
	bCancel := TRUE;
END_IF

(* Allow operation to be cancelled from an input signal.
 The cancel input signal can be deferred by the operation if the 
 operation is not at a good point to finish cancelling. *)
IF eStep <> E_OpStep.IDLE AND NOT bDeferCancel AND bCancel THEN
	M_FatalError('Operation canceled');
END_IF

IF M_TimeoutExpired() THEN // If a timeout has expired, trigger a fatal error
	M_FatalError('Timeout expired');
END_IF]]></ST>
    </Implementation>
    <Method Name="M_DeferCancel" Id="{c35e5c43-6ebf-4bbc-8a98-44ef22ff8a27}">
      <Declaration><![CDATA[// Defer cancel signals until a later time
METHOD PROTECTED M_DeferCancel
VAR_INPUT
	i_bDefer : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bDeferCancel := i_bDefer;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_FatalError" Id="{a9657383-9b85-4461-93cb-61ac9678587c}">
      <Declaration><![CDATA[METHOD PROTECTED M_FatalError
VAR_INPUT
	i_ErrorMessage : STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_ResetTimeoutTimer();
M_SetMessage(i_ErrorMessage);
eStep := E_OpStep.IDLE;
q_bError := TRUE;
q_bBusy := FALSE;
bCancel := FALSE;
M_DeferCancel(FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Finish" Id="{88ea7fc5-59a3-48a8-88d0-e9fbd7406631}">
      <Declaration><![CDATA[METHOD PROTECTED M_Finish
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_ResetTimeoutTimer();
M_SetMessage('Operation finished');
eStep := E_OpStep.IDLE;
q_bBusy := FALSE;
bCancel := FALSE;
M_DeferCancel(FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ResetError" Id="{f3475c54-8361-453d-b5be-01159442bfe4}">
      <Declaration><![CDATA[METHOD PUBLIC M_ResetError
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[q_bError := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ResetTimeoutTimer" Id="{c5848f2a-4ad0-4c43-bb15-e2835c5c0c6d}">
      <Declaration><![CDATA[METHOD PROTECTED M_ResetTimeoutTimer
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimeoutTimer(IN := FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_RunTimeoutTimer" Id="{e7e36b84-1348-4c93-80ba-e67778baf763}">
      <Declaration><![CDATA[METHOD PROTECTED M_RunTimeoutTimer
VAR_INPUT
	i_tTime : TIME; // How long the timer should run before signalling a timeout
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimeoutTimer(IN := TRUE, PT := i_tTime);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SetMessage" Id="{8436764f-a4c7-4c72-b1be-9a647d3d8896}">
      <Declaration><![CDATA[METHOD PROTECTED M_SetMessage
VAR_INPUT
	i_sMessage : STRING(EPICS_STRING_SIZE);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[iq_sMessageBuffer := i_sMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_TimeoutExpired" Id="{613a1767-fc71-4068-a0f9-f09d123b2cbd}">
      <Declaration><![CDATA[METHOD PROTECTED M_TimeoutExpired : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimeoutTimer(); // Advance timer
M_TimeoutExpired := fbTimeoutTimer.Q;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Operation">
      <LineId Id="310" Count="5" />
      <LineId Id="354" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="352" Count="1" />
      <LineId Id="346" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="317" Count="5" />
      <LineId Id="210" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_DeferCancel">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_FatalError">
      <LineId Id="15" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="7" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="31" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_Finish">
      <LineId Id="11" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_ResetError">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_ResetTimeoutTimer">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_RunTimeoutTimer">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_SetMessage">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Operation.M_TimeoutExpired">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>