<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_SwitchboxRoughingOrTurboPumpFailure" Id="{b71f0da3-398e-46c3-8f15-953274fd5047}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SwitchboxRoughingOrTurboPumpFailure EXTENDS FB_MaintainLaserOperation
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbVentSwitchbox: FB_VentSwitchbox;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^(iq_sMessageBuffer := iq_sMessageBuffer);

CASE eStep OF
E_OpStep.IDLE: // Do nothing

E_OpStep.START:
	M_RunTimeoutTimer(VALVE_TIMEOUT);
	GVL_BTS_VAC.fb_PP_VGC.M_Set_OPN_SW(FALSE);
	M_SetMessage('Closing switchbox valve');
	
	IF GVL_BTS_VAC.fb_PP_VGC.M_IsClosed() THEN
		M_ResetTimeoutTimer();
		IF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS < 1E-3 THEN
			M_SetMessage('Turn on ion pump');
			eStep := E_OpStep.BOPL_TURN_ON_ION_PUMP;
		ELSE
			M_SetMessage('Unable to maintain vacuum');
			M_ShutdownLaser();
			eStep := E_OpStep.BOPL_VENT_SB;
		END_IF
	END_IF

E_OpStep.BOPL_TURN_ON_ION_PUMP:
	M_RunTimeoutTimer(PUMP_TIMEOUT);
	GVL_BTS_VAC.fb_PP_PIP.M_Run(TRUE);
	
	IF NOT GVL_BTS_VAC.fb_PP_PIP.i_xSP_DI THEN
		M_ResetTimeoutTimer();
		M_SetMessage('Closing pumping station valves');
		eStep := E_OpStep.BOPL_CLOSE_PP_VALVES;
	END_IF
	
E_OpStep.BOPL_CLOSE_PP_VALVES:
	M_RunTimeoutTimer(VALVE_TIMEOUT);
	GVL_BTS_VAC.fb_PP_VRC_1.M_Set_OPN_SW(FALSE);
	GVL_BTS_VAC.fb_PP_VRC_2.M_Set_OPN_SW(FALSE);
	
	IF GVL_BTS_VAC.fb_PP_VRC_1.iq_stValve.eState = E_ValvePositionState.CLOSED AND GVL_BTS_VAC.fb_PP_VRC_2.iq_stValve.eState = E_ValvePositionState.CLOSED THEN
		M_ResetTimeoutTimer();
		M_SetMessage('Turning off pumping station pumps');
		eStep := E_OpStep.BOPL_TURN_OFF_PP_PUMPS;
	END_IF
	
E_OpStep.BOPL_TURN_OFF_PP_PUMPS:
	M_RunTimeoutTimer(PUMP_TIMEOUT);
	GVL_BTS_VAC.fb_PP_PTM.M_Run(FALSE);
	GVL_BTS_VAC.fb_PP_PMF.M_Run(FALSE);
	
	IF GVL_BTS_VAC.fb_PP_PTM.iq_stPTM.eState = E_PumpState.pumpSTOPPED AND GVL_BTS_VAC.fb_PP_PMF.q_stPump.eState = E_PumpState.pumpSTOPPED THEN
		M_ResetTimeoutTimer();
		M_SetMessage('Maintaining vacuum');
		eStep := E_OpStep.BOPL_HOLD;
	END_IF

E_OpStep.BOPL_HOLD:
	// Hold vacuum as long as possible.
	IF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS > 1E-4  THEN
		M_ShutdownLaser();
		M_SetMessage('Vacuum lost. Closing transport tubes');
		eStep := E_OpStep.BOPL_CLOSE_TRANSPORT_TUBE_VALVES;
	END_IF

E_OpStep.BOPL_CLOSE_TRANSPORT_TUBE_VALVES:
	M_RunTimeoutTimer(VALVE_TIMEOUT);
	M_CloseAllTransportTubeValves();
	
	IF M_AllTransportTubeValvesClosed() THEN
		M_ResetTimeoutTimer();
		M_SetMessage('Closing switchbox valve');
		eStep := E_OpStep.BOPL_VENT_SB;
	END_IF
	
E_OpStep.BOPL_VENT_SB:
	M_DeferCancel(TRUE);
	fbVentSwitchbox(i_bExecute := TRUE,
		i_bCancel := i_bCancel,
		iq_sMessageBuffer := iq_sMessageBuffer);
		
	IF fbVentSwitchbox.q_bError THEN
		M_DeferCancel(FALSE);
		M_FatalError('Error while venting switchbox');
	ELSIF NOT fbVentSwitchbox.q_bBusy THEN
		M_DeferCancel(FALSE);
		M_Finish();
	END_IF
	
ELSE
	M_FatalError('Operation is in invalid state');
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_SwitchboxRoughingOrTurboPumpFailure">
      <LineId Id="10" Count="3" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="38" Count="2" />
      <LineId Id="42" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="7" />
      <LineId Id="53" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="56" Count="6" />
      <LineId Id="64" Count="1" />
      <LineId Id="63" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="77" Count="6" />
      <LineId Id="76" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="88" Count="10" />
      <LineId Id="87" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>